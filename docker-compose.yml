services:
  backend:
    build: .
    image: symfony_chess_backend:latest
    container_name: symfony-backend
    # Uruchamiamy wbudowany serwer PHP binding na 0.0.0.0
    command: php -S 0.0.0.0:8000 -t public
    ports:
      - 8000:8000
    environment:

      # MQTT Broker w sieci Docker
      MQTT_BROKER: mosquitto
      MQTT_PORT:   1883
      MQTT_CLIENT_ID: szachmat_backend

      # Mercure Hub w sieci Docker
      MERCURE_URL:        http://localhost:3000/.well-known/mercure
      # Publiczny URL dla front-endu w przeglądarce
      MERCURE_PUBLIC_URL: http://localhost:3000/.well-known/mercure
      MERCURE_JWT_SECRET: token_jwt
    volumes:
      - symfony-var:/app/var
    depends_on:
      - mosquitto
      - mercure

  mqtt-listener:
    image: symfony_chess_backend:latest
    container_name: symfony-mqtt-listener
    command: php bin/console app:mqtt-listen
    environment:

      # MQTT Broker w sieci Docker
      MQTT_BROKER: mosquitto
      MQTT_PORT:   1883
      MQTT_CLIENT_ID: szachmat_backend

      # Mercure Hub w sieci Docker
      MERCURE_URL:        http://localhost:3000/.well-known/mercure
      MERCURE_PUBLIC_URL: http://localhost:3000/.well-known/mercure
      MERCURE_JWT_SECRET: token_jwt
    volumes:
      - symfony-var:/app/var
    depends_on:
      - backend
      - mosquitto
      - mercure

  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mqtt-broker
    ports:
      - 1883:1883

  mercure:
    image: dunglas/mercure
    container_name: mercure-hub
    # Montujemy lokalny dev.Caddyfile, by Caddy uruchomił Mercure zgodnie z dokumentacją
    volumes:
      - ./dev.Caddyfile:/etc/caddy/dev.Caddyfile:ro
    environment:
      MERCURE_PUBLISHER_JWT_KEY: "token_jwt"
      MERCURE_SUBSCRIBER_JWT_KEY: "token_jwt"
    command: /usr/bin/caddy run --config /etc/caddy/dev.Caddyfile
    ports:
      - 3000:3000
    depends_on:
      - mosquitto

volumes:
  # Wolumen współdzielony dla /app/var (SQLite i logi)
  symfony-var: {}